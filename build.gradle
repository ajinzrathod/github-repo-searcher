plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ajinz'
version = '0.0.1-SNAPSHOT'
description = 'Assignment - Github Repository Searcher'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

// Simplified integration test source set configuration
sourceSets {
    integrationTest {
        java {
            srcDir 'src/integration-test/java'
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
        resources {
            srcDir 'src/integration-test/resources'
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:11.11.2'
	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
    testImplementation 'com.h2database:h2'
	testImplementation 'io.projectreactor:reactor-test'
    integrationTestImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter tasks.test
    useJUnitPlatform()
}